#
# PLAY 2 - Teardown the supporting VPC structures
#
- name: Teardown the supporting VPC structures
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
     aws_access_key_id: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
     aws_secret_access_key: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
     aws_default_region: "{{ lookup('env','AWS_DEFAULT_REGION') }}"

  tasks:

# Get info about the Guac VPC and its dependencies

  - name: Retrieve Guac VPC facts
    ec2_vpc_net_facts:
      filters:
        "tag:Name": guac-vpc
    register: guacvpc

  - name: Get VPC Subnet Info
    ec2_vpc_subnet_facts:
      filters:
        "tag:Role": guac-vpc
    register: guac_subnets

  - name: Get VPC Internet Gateway Info
    ec2_vpc_igw_facts:
      filters:
        "tag:Role": guac-vpc
    register: guac_igw

  - name: Get VPC Route Table Info
    ec2_vpc_route_table_facts:
      filters:
        "tag:Role": guac-vpc
    register: guac_rt

  - name: Get Security Group Info
    ec2_group_facts:
      filters:
        "tag:Role": guac-vpc
    register: guac_sg

  - name: Get NAT Gateway Info
    ec2_vpc_nat_gateway_facts:
      filters:
        "vpc-id": "{{ guacvpc.vpcs[0].vpc_id }}"
        "state": available
    register: guac_nat

  - name: Get the NAT EIP
    ec2_eip_facts:
      filters:
        "public-ip": "{{guac_nat.result[0].nat_gateway_addresses[0].public_ip}}"
    register: guac_nat_eip

# Delete the NAT GW

  - name: Delete nat gateway
    ec2_vpc_nat_gateway:
      state: absent
      nat_gateway_id: "{{guac_nat.result[0].nat_gateway_id}}"
      wait: yes
      wait_timeout: 600
      region: "{{ aws_default_region }}"

# Delete the security group

  - name: Remove rules from guac private
    ec2_group:
      name: guac_private
      description: Security Group for student VMs
      vpc_id: "{{ guacvpc.vpcs[0].vpc_id }}"
      region: "{{ aws_default_region }}"
      purge_rules: true

  - name: Remove rules from guac public
    ec2_group:
      name: guac_public
      description: Security Group for guacamole-host gateway
      vpc_id: "{{ guacvpc.vpcs[0].vpc_id }}"
      region: "{{ aws_default_region }}"
      purge_rules: true

  - name: Delete guac-private security group
    ec2_group:
      region: "{{ aws_default_region }}"
      group_id: "{{ guac_sg.security_groups[1].group_id }}"
      state: absent

  - name: Delete guac-public security group
    ec2_group:
      region: "{{ aws_default_region }}"
      group_id: "{{ guac_sg.security_groups[0].group_id }}"
      state: absent

# Delete the route table

  - name: delete route table
    ec2_vpc_route_table:
      vpc_id: "{{ guacvpc.vpcs[0].vpc_id }}"
      region: "{{ aws_default_region }}"
      route_table_id: "{{ guac_rt.route_tables[0].id }}"
      lookup: id
      state: absent

# Delete the IGW

  - name: Delete IGW
    ec2_vpc_igw:
      vpc_id: "{{ guacvpc.vpcs[0].vpc_id }}"
      region: "{{ aws_default_region }}"
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"
      state: "absent"
      tags:
        Name: guac-igw
        Role: guac-vpc

# Delete both subnets

  - name: Delete the Public Subnet
    ec2_vpc_subnet:
      state: absent
      vpc_id: "{{ guacvpc.vpcs[0].vpc_id }}"
      cidr: "{{ guac_subnets.subnets[0].cidr_block  }}"

  - name: Delete the Private Subnet
    ec2_vpc_subnet:
      state: absent
      vpc_id: "{{ guacvpc.vpcs[0].vpc_id }}"
      cidr: "{{ guac_subnets.subnets[1].cidr_block  }}"

# Delete the VPC after removing everything else

  - name: Delete Guac VPC
    ec2_vpc_net:
      name: guac-vpc
      cidr_block: "{{  guacvpc.vpcs[0].cidr_block }}"
      state: absent
      aws_access_key: "{{ aws_access_key_id }}"
      aws_secret_key: "{{ aws_secret_access_key }}"

# Release the EIP allocated for the Gateway

  - name: Release EIP for the NAT Gateway
    ec2_eip:
      state: absent
      ip: "{{guac_nat.result[0].nat_gateway_addresses[0].public_ip}}"
